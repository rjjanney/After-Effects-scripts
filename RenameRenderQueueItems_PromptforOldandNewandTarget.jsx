/*    This script searches the render queue for items with the word that user specifies (replacableName) in them and changes the word to user inputted word (newName), upper case or mixed case as appropriate        */var proj = app.project;var myRQ = proj.renderQueue;var numOM, oldPath, oldName;var replacableName = prompt("Name To Replace?  (Upper/Lower Case)", "Stanford")if(replacableName == null){    replacableName = "Stanford"    }var replacableNAME = replacableName.toUpperCase()var newName = prompt("ReplacementSchool Name?  (upper/lower case)", "Stanford");var upperName = newName.toUpperCase(); //variable to hold uppercase version of user inputted newNamevar startDirectory = Folder.selectDialog("Please select new destination.");for(var i = 1; i <= myRQ.numItems; i++){ //steps through every output quque item. Assumes only one output module per item.    for(var j = 1; j <= myRQ.item(i).numOutputModules; j++){            var oldPath = myRQ.item(i).outputModule(j).file.path;             var oldName = myRQ.item(i).outputModule(j).file.name;                      // alert(oldPath + "\n" + oldName);            var rqItem1_settable = app.project.renderQueue.item(i).outputModule(j).getSettings();            var subPath = rqItem1_settable["Output File Info"]["Subfolder Path"];            var basePath = rqItem1_settable["Output File Info"]["Base Path"];            // alert(basePath);            // The substituted value will be contained in the result variable            var result = oldName.replace(replacableName, newName);            //This is the line that changes the Output To: name            var my_renderSettings = {            "Output File Info":            {            "Base Path":startDirectory.fsName,            "Subfolder Path":subPath,            "File Name":result,            }            };                app.project.renderQueue.item(i).outputModule(j).setSettings( my_renderSettings );        //  myRQ.item(i).outputModule(j).file = new File(oldPath + "/" + amendedName)        }               }/*/---------------------------------------------------------------------------------------------------------        oldPath = myRQ.item(i).outputModule(1).file.path;     oldName = myRQ.item(i).outputModule(1).file.name;        var n = oldName.search(replacableName);     if(n == -1 ){   //If "Stanford"not found,, assume "STANFORD".              amendedName = oldName.replace(replacableNAME, upperName)                        }else {               amendedName = oldName.replace(replacableName, newName)     }      //This is the line that changes the Output To: name          myRQ.item(i).outputModule(1).file = new File(oldPath + "/" + amendedName)      }// Make new file object with new project namevar newFile = new File(app.project.file.toString().replace(replacableName, newName));//Save it as new fileapp.project.save(newFile);// Renderapp.project.renderQueue.render();var doneList = [];for(var i = 1; i <= myRQ.numItems; i++){  // alert(app.project.renderQueue.item(i).outputModule(1).file);  if (app.project.renderQueue.item(i).status == 2619){    app.project.renderQueue.item(i).duplicate();    doneList.push(app.project.renderQueue.item(i));  }}// alert(doneList.length);var lengthCopy = doneList.slice();for(var j = 0; j < lengthCopy.length; j++){    var deleteMe = doneList.shift();//    alert((doneList.length).toString() + (lengthCopy.length).toString());    deleteMe.remove();}*/writeLn("All done.");